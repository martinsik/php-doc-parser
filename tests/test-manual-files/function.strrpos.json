{
    "desc": "Find the position of the last occurrence of a substring in a string.",
    "long_desc": "Find the numeric position of the last occurrence of `needle` in the `haystack` string.",
    "ver": "PHP 4, PHP 5",
    "ret_desc": "Returns the position where the needle exists relative to the beginnning of the haystack string (independent of search direction or offset). Also note that string positions start at 0, and not 1.",
    "seealso": [
        "strpos",
        "stripos",
        "strripos",
        "strrchr",
        "substr"
    ],
    "filename": "function.strrpos",
    "params": [
        {
            "name": "strrpos",
            "list": [
                {
                    "type": "string",
                    "var": "$haystack",
                    "beh": "required",
                    "desc": "The string to search in."
                },
                {
                    "type": "string",
                    "var": "$needle",
                    "beh": "required",
                    "desc": "If `needle` is not a string, it is converted to an integer and applied as the ordinal value of a character."
                },
                {
                    "type": "int",
                    "var": "$offset",
                    "beh": "optional",
                    "desc": "If specified, search will start this number of characters counted from the beginning of the string. If the value is negative, search will instead start from that many characters from the end of the string, searching backwards.",
                    "default": 0
                }
            ],
            "ret_type": "int"
        }
    ],
    "examples": [
        {
            "title": "Checking if a needle is in the haystack",
            "source": "$pos = strrpos($mystring, \"b\");\nif ($pos === false) { \/\/ note: three equal signs\n    \/\/ not found...\n}",
            "output": null
        },
        {
            "title": "Searching with offsets",
            "source": "$foo = \"0123456789a123456789b123456789c\";\n\nvar_dump(strrpos($foo, '7', -5));  \/\/ Starts looking backwards five positions\n                                   \/\/ from the end. Result: int(17)\n\nvar_dump(strrpos($foo, '7', 20));  \/\/ Starts searching 20 positions into the\n                                   \/\/ string. Result: int(27)\n\nvar_dump(strrpos($foo, '7', 28));  \/\/ Result: bool(false)",
            "output": null
        }
    ]
}